inputs:
  sdf_path:
    type: File
    format:
    - edam:format_3814

steps:
- docking.yml:
- stability.yml:
- stability.yml:
#- yank.yml:

wic:
  graphviz:
    label: Docking + MD Stability Analysis + Binding Free Energy
  steps:
    (1, docking.yml):
      in:
        sdf_path: ~sdf_path
    (2, stability.yml):
      wic:
        inlineable: False
        environment:
          action: checkpoint
        steps:
          (1, setup.yml):
            wic:
              steps:
                (4, genion):
                  in:
                    output_top_zip_path: '&genion_complex.zip'
          (2, basic.yml):
            wic:
              steps:
                (3, prod.yml):
                  wic:
                    steps:
                      (1, grompp):
                        in:
                          input_top_zip_path: '*genion_complex.zip'
                      (2, mdrun):
                        in:
                          output_crd_path: '&prod_complex.gro'
                      (3, cwl_watcher_analysis.yml):
                        wic:
                          backend: complex
          (3, analysis.yml):
            wic:
              steps:
                (1, analysis_realtime.yml):
                  wic:
                    backend: complex
                (2, analysis_final.yml):
                  wic:
                    backend: complex
    (3, stability.yml):
      # TODO: Figure out how to make these inlineing-invariant
      in:
        crd_path: '*ligand_GMX.gro'
        top_zip_path: '*ligand_GMX.zip'
      wic:
        inlineable: False
        environment:
          action: restore
          save_defs: ['genion_complex.zip', 'prod_complex.gro']
        steps:
          (1, setup.yml):
            wic:
              steps:
                (4, genion):
                  in:
                    output_top_zip_path: '&genion_ligand.zip'
          (2, basic.yml):
            wic:
              steps:
                (3, prod.yml):
                  wic:
                    steps:
                      (1, grompp):
                        in:
                          input_top_zip_path: '*genion_ligand.zip'
                      (2, mdrun):
                        in:
                          output_crd_path: '&prod_ligand.gro'
                      (3, cwl_watcher_analysis.yml):
                        wic:
                          backend: ligand
          (3, analysis.yml):
            wic:
              steps:
                (1, analysis_realtime.yml):
                  wic:
                    backend: ligand
                (2, analysis_final.yml):
                  wic:
                    backend: ligand